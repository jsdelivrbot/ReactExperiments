{"version":3,"sources":["logo.svg","components/QuestionComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Questions","question","options","answer","QuestionForm","props","react_default","a","createElement","className","data","QuestionsContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onNextClick","state","current","length","setState","prevState","onPrevClick","correct","bind","assertThisInitialized","QuestionComponent_QuestionForm","class","onClick","PureComponent","withRouter","Home","Component","Contact","Thanks","NoMatch","App","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fbe3e449.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst Questions = [\n  {\n    question: 'Q1',\n    options: ['o1', 'o2', 'o3', 'o4'],\n    answer: 'o2',\n  },\n  {\n    question: 'Q2',\n    options: ['o1', 'o2', 'o3', 'o4'],\n    answer: 'o2',\n  },\n  {\n    question: 'Q3',\n    options: ['o1', 'o2', 'o3', 'o4'],\n    answer: 'o2',\n  },\n  {\n    question: 'Q4',\n    options: ['o1', 'o2', 'o3', 'o4'],\n    answer: 'o2',\n  },\n  {\n    question: 'Q5',\n    options: ['o1', 'o2', 'o3', 'o4'],\n    answer: 'o2',\n  },\n];\nconst QuestionForm = props => {\n  return (\n    <div className=\"questionForm\">\n      <div>{props.data.question}</div>\n    </div>\n  );\n};\nclass QuestionsContainer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 1,\n      correct: 0,\n    };\n    this.onNextClick = this.onNextClick.bind(this);\n    this.onPrevClick = this.onPrevClick.bind(this);\n  }\n  onNextClick = () => {\n    if (this.state.current === Questions.length) return;\n    this.setState(prevState => ({\n      current: prevState.current + 1,\n    }));\n  };\n  onPrevClick = () => {\n    if (this.state.current === 1) return;\n    this.setState(prevState => ({\n      current: prevState.current - 1,\n    }));\n  };\n  render() {\n    return (\n      <div>\n        <QuestionForm\n          onNextClick={this.onNextClick}\n          onPrevClick={this.onPrevClick}\n          data={Questions[this.state.current - 1]}\n        />\n        <div class=\"questionAction\">\n          <div class=\"qButton\" onClick={this.onPrevClick}>\n            Previous\n          </div>\n          <div class=\"qButton\" onClick={this.onNextClick}>\n            Next\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(QuestionsContainer);\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  withRouter,\n  Switch,\n} from 'react-router-dom';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Questions from './components/QuestionComponent';\n\nclass Home extends Component {\n  render() {\n    return <div className=\"homeComponent\"> Home </div>;\n  }\n}\n\nclass Contact extends Component {\n  render() {\n    return <div> Contact </div>;\n  }\n}\n\nclass Thanks extends Component {\n  render() {\n    return <div> Thanks</div>;\n  }\n}\n\nclass NoMatch extends Component {\n  render() {\n    return <div>404!</div>;\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div class=\"AppContainer\">\n        <div className=\"App\">Welcome!</div>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/question\" component={Questions} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/thanks\" component={Thanks} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}